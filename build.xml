<?xml version="1.0"?>
<project name="JsonRPC in CPP using libjson-rpc-cpp" default="targets">
   <taskdef resource="cpptasks.tasks"/>
   <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
   <property name="src.dir" value="src"/>
   <property name="dist.dir" value="bin"/>
   <property name="classes.dir" value="classes"/>
   <property name="obj.dir" value="obj"/>
   <property name="host.name" value="127.0.0.1"/>
   <property name="port.num" value="8080"/>
   <property name="dport.num" value="3030"/>
   <property name="json.file.name" value="MovieLibraryMethods.json"/>
   <property environment="env"/>
   <property name="cxxflag" value="-std=c++14"/>
   <property name="includepath" value="/usr/local/include:/usr/include/jsoncpp"/>
   <property name="client.lib.path" value="/usr/local/lib"/>
   <property name="client.lib.list" value="jsoncpp,jsonrpccpp-client,jsonrpccpp-common,microhttpd,fltk,pthread,stdc++"/>
   <property name="server.lib.path" value="/usr/local/lib"/>
   <property name="server.lib.list" value="jsoncpp,jsonrpccpp-server,jsonrpccpp-common,microhttpd,stdc++"/>

   <target name="targets">
      <echo message="Targets are clean, prepare, generate.server.stub, build.server, generate.client.stub, build.client, generate.java.proxy, build.java.server, build.java.dserver, build.java.client"/>
      <echo message="base directory is: ${basedir}"/>
      <echo message="execute cpp server with: ./bin/movieLibraryRPCServer ${port.num}"/>
      <echo message="execute cpp client with: ./bin/movieLibraryRPCClient http://${host.name}:${port.num}"/>
      <echo message="execute JAVA client with java -cp classes:lib/jsonrpcclient.jar:lib/movieGui.jar ser321.movie.movieLibraryClient ${host.name} ${port.num} ${dport.num}"/>
      <echo message="execute JAVA download server with: java -cp classes ser321.serialize.downloadServer ${dport.num}"/>
   </target>

   <path id="compile.classpath">
      <pathelement location="${classes.dir}"/>
      <fileset dir="${basedir}/lib">
         <include name="json.jar"/>
         <include name="jsonrpcserver.jar"/>
         <include name="jsonrpcclient.jar"/>
         <include name="jsonrpcproxy.jar"/>
	 <include name="movieGui.jar"/>
      </fileset>
   </path>

   <target name="clean">
      <delete dir="${classes.dir}" failonerror="false"/>
      <delete dir="${dist.dir}" failonerror="false"/>
      <delete dir="${obj.dir}" failonerror="false"/>
      <delete file="${src.dir}/cpp/server/movielibraryserverstub.h"
              failonerror="false"/>
      <delete file="${src.dir}/cpp/client/movielibraryclientstub.h"
              failonerror="false"/>
      <delete file="${src.dir}/java/client/MovieHttpProxy.java"
	      failonerror="false"/>
   </target>

   <target name="prepare">
      <mkdir dir="${classes.dir}"/>
      <mkdir dir="${dist.dir}" />
      <mkdir dir="${obj.dir}/cpp/client" />
      <mkdir dir="${obj.dir}/cpp/server" />
    </target>

    <target name="generate.client.stub" depends="prepare">
      <exec dir="${basedir}" executable="jsonrpcstub">
         <arg line="${json.file.name} --cpp-client=movielibraryclientstub"/>
      </exec>
      <copy file="movielibraryclientstub.h"
            tofile="${src.dir}/cpp/client/movielibraryclientstub.h"/>
      <delete file="movielibraryclientstub.h"/>
   </target>
    
   <target name="build.client" depends="generate.client.stub">
     <echo message="includepath is: ${includepath}"/>
      <cc outtype="executable" subsystem="console"
          outfile="${dist.dir}/movieLibraryRPCClient"
          objdir="${obj.dir}/cpp/client">
         <compilerarg value="${cxxflag}"/>
         <includepath>
            <pathelement path="${includepath}"/>
         </includepath>
         <libset dir="${client.lib.path}" libs="${client.lib.list}"/>
         <fileset dir="${src.dir}/cpp/client" includes="MovieLibraryClient.cpp"/>
         <fileset dir="${src.dir}/cpp/server" includes="MovieDescription.cpp"/>
      </cc>
   </target>

   <target name="generate.server.stub" depends="prepare">
      <exec dir="${basedir}" executable="jsonrpcstub">
         <arg line="${json.file.name} --cpp-server=movielibraryserverstub"/>
      </exec>
      <copy file="movielibraryserverstub.h"
            tofile="${src.dir}/cpp/server/movielibraryserverstub.h"/>
      <delete file="movielibraryserverstub.h"/>
   </target>

   <target name="build.server" depends="generate.server.stub">
     <cc outtype="executable" subsystem="console"
         outfile="${dist.dir}/movieLibraryRPCServer"
         objdir="${obj.dir}/cpp/server">
         <compiler name="g++"/>
         <compilerarg value="${cxxflag}"/>
         <includepath>
            <pathelement path="${includepath}"/>
         </includepath>
         <libset dir="${server.lib.path}" libs="${server.lib.list}"/>
         <fileset dir="${src.dir}/cpp/server"
                  includes="MovieDescription.cpp, MovieLibrary.cpp, MovieLibraryServer.cpp"/>
      </cc>
   </target>

   <target name="build.java.server" depends="prepare"
	   description="Compile Java server sources">
     <!-- Compile Java server classes as necessary -->
     <echo message="execute http server with: ..."/>
     <javac srcdir="${src.dir}/java/server"
	    destdir="${classes.dir}"
	    includeantruntime="false">
       <classpath refid="compile.classpath"/>
     </javac>
   </target>

   <target name="build.java.dserver" depends="build.java.server"
	   description="Compile Java download server sources">
     <echo message="compiling download server"/>
     <javac srcdir="${src.dir}/java/dserver"
	    destdir="${classes.dir}"
	    includeantruntime="false">
       <classpath refid="compile.classpath"/>
     </javac>
   </target>
   
   <target name="generate.java.proxy" depends="build.java.dserver"
	   description="Execute the jsonRPC proxy generator to generate client proxy.">
     <echo message="http proxy: java -cp classes:lib/jsonrpcproxy.jar edu.asu.ser.jsonrpc.proxy.ProxyGenerator -l java -t http -o CalculatorHttpProxy ser321.movieServer.movieLibrary ser321.movieServer.movieDescription"/>
     <java classname="edu.asu.ser.jsonrpc.proxy.ProxyGenerator"
	   fork="yes">
       <classpath refid="compile.classpath"/>
       <arg value="-l"/>
       <arg value="java"/>
       <arg value="-t"/>
       <arg value="http"/>
       <arg value="-o"/>
       <arg value="MovieHttpProxy"/>
       <arg value="ser321.movieServer.movieLibrary"/>
       <arg value="ser321.movieServer.movieDescription"/>
     </java>

     <move file="${basedir}/MovieHttpProxy.java"
	   tofile="${src.dir}/java/client/MovieHttpProxy.java"/>
   </target>

   <target name="build.java.client" depends="generate.java.proxy"
	   description="Compile Java client sources">
     <echo message="execute client: java -cp classes:lib/jsonrpcclient.jar..."/>
     <javac srcdir="${src.dir}/java/client"
	    destdir="${classes.dir}"
	    includeantruntime="false">
       <classpath refid="compile.classpath"/>
     </javac>
   </target>

</project>
